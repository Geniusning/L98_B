<template>
  <view class="group-page">
    <!-- 第一步 -->
    <view class="group-step1-wrapper">
      <view class="title">第一步：选择拟启用微信消息群友通知的活动（单选）</view>
      <radio-group @change="checkboxAct" class="radio-group">
        <repeat for="{{activityList}}" key="index" item="item">
          <label class="label_tag">
              <view class="radio-circle">
                <radio color="#FFBA00" value='{{item.id}}' disabled='{{item.disabled}}' />
              </view>
              <view class="radio-text">{{item.name}}</view>
            </label>
        </repeat>
      </radio-group>
    </view>
    <!-- 第二步 -->
    <view class="group-step2-wrapper">
      <view class="title">第二步：选择客户</view>
      <checkbox @tap="selectAll" color="#FFBA00" checked='{{isAllChecked}}' class="selectAll" />全选
      <checkbox-group @change="checkboxClient" class="radio-group">
        <repeat for="{{usersTypeList}}" key="index" item="item">
          <label class="label_tag" data-usersTypeId="{{item.checked}}" @tap="getUserTypeId({{index}})">
              <view class="radio-circle">
                <checkbox color="#FFBA00" checked="{{item.checked}}" value="{{item.id}}" data-usersTypeId="{{item.id}}" />
              </view>
              <view class="radio-text">{{item.value}}</view>
            </label>
        </repeat>
      </checkbox-group>
    </view>
    <!-- 第三步 -->
    <view class="group-step3-wrapper" style="margin-top:30rpx">
      <view class="title">第三步：选择性别</view>
      <radio-group @change="checkboxSex" class="radio-group">
        <repeat for="{{sexList}}" key="index" item="item">
          <label class="label_tag">
              <view class="radio-circle">
                <radio color="#FFBA00" value='{{item.id}}' />
              </view>
              <view class="radio-text">{{item.name}}</view>
            </label>
        </repeat>
      </radio-group>
    </view>
    <!-- 第四步 -->
    <view class="group-step4-wrapper">
      <view class="title">第四步：是否是会员</view>
      <radio-group @change="checkboxVip" class="radio-group">
        <repeat for="{{vipList}}" key="index" item="item">
          <label class="label_tag">
              <view class="radio-circle">
                <radio color="#FFBA00" value='{{item.id}}' />
              </view>
              <view class="radio-text">{{item.name}}</view>
            </label>
        </repeat>
      </radio-group>
    </view>
    <!-- 第五步 -->
    <view class="group-step5-wrapper">
      <view class="title">第五步：选择是否通知门店员工</view>
      <radio-group @change="checkboxStaff" class="radio-group">
        <repeat for="{{staffList}}" key="index" item="item">
          <label class="label_tag">
              <view class="radio-circle">
                <radio color="#FFBA00" value='{{item.id}}' />
              </view>
              <view class="radio-text">{{item.name}}</view>
            </label>
        </repeat>
      </radio-group>
    </view>
    <!-- 符合用户数 -->
    <view class="group-show-wrapper" wx:if='{{resultPerpon}}'>
      <text class="result-text">符合条件用户{{limitedNum}}人，其中关注用户{{subscribeNum}}人</text>
    </view>
    <!-- 按钮 -->
    <view class="btn-wrapper">
      <button @tap="dispatchGroupN" class="center-btn">发布</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  const util = require('../../../utils/utils.js');
  export default class groupNotice extends wepy.page {
    config = {
      navigationBarTitleText: '群发通知'
    };
    data = {
      noticeType: 0,
      sortType: [],
      limitedNum: 0,
      subscribeNum: 0,
      sexType: 0,
      vipType: 0,
      adminType: 0,
      isAllChecked: false,
      activityList: [{
          name: '活动告示板',
          disabled: false,
          type: 'activityIsOline',
          id: 1
        },
        {
          name: '大话比赛',
          disabled: false,
          type: 'arenaIsOline',
          id: 2
        },
        {
          name: '邀新有礼',
          disabled: false,
          type: 'inviteIsOline',
          id: 3
        },
        {
          name: '一元团购',
          disabled: false,
          type: 'yiYuanIsOline',
          id: 4
        }
      ],
      vipList: [{
          name: '不限',
          id: 0
        },
        {
          name: '会员卡',
          id: 1
        },
        {
          name: '非会员',
          id: 2
        }
      ],
      staffList: [
        {
          name: '通知客人和员工',
          id: 0
        },{
          name: '只通知客人',
          id: 1
        },
        {
          name: '只通知员工',
          id: 2
        }
      ],
      sexList: [{
          name: '全部',
          id: 0
        },
        {
          name: '男',
          id: 1
        },
        {
          name: '女',
          id: 2
        }
      ],
      usersTypeList: [{
          id: '1',
          value: '新客',
          checked: false
        },
        {
          id: '2',
          value: '本月低频',
          checked: false
        },
        {
          id: '4',
          value: '本月中频',
          checked: false
        },
        {
          id: '8',
          value: '本月高频',
          checked: false
        },
        {
          id: '16',
          value: '本月未到店',
          checked: false
        },
        {
          id: '0',
          value: '从未到店',
          checked: false
        },
      ],
      filterCondition: {
        sortType: null,
        sexType: null,
        vipType: null,
        adminType: null
      },
      resultPerpon: false,
      cusAndSub: {}
    };
    watch = {
      filterCondition(newValue) {
        console.log('newValue--------', newValue)
        if (newValue.sortType != null && newValue.sexType != null && newValue.vipType != null && newValue.adminType != null) {
          this.resultPerpon = true
          setTimeout(() => {
            this._getUsersForNotice()
          }, 200);
        } else {
          this.resultPerpon = false
        }
        // for (const key in newValue) {
        //   if (newValue.hasOwnProperty(key)) {
        //     const element = newValue[key];
        //     if (element) {
        //     } else {
        //     }
        //   }
        // }
        console.log('element---------', newValue)
      }
    }
    methods = {
      checkboxAct(e) {
        console.log("Act------", e.detail.value)
        this.noticeType = Number(e.detail.value)
      },
      checkboxVip(e) {
        this.filterCondition.vipType = Number(e.detail.value)
      },
      checkboxSex(e) {
    
        this.filterCondition.sexType = Number(e.detail.value)
      },
      checkboxStaff(e) {
        this.filterCondition.adminType = Number(e.detail.value)
      },
      //发布群通知
      dispatchGroupN() {
        this._startNotice()
      },
      selectAll(e) {
        this.isAllChecked = !this.isAllChecked
        if (this.isAllChecked) {
          this.usersTypeList.forEach(item => {
            item.checked = true
            this.sortType = [1, 2, 4, 8, 16, 0]
            this.filterCondition.sortType = [1, 2, 4, 8, 16, 0]
          })
        } else {
          this.usersTypeList.forEach(item => {
            item.checked = false
            this.sortType = []
            this.filterCondition.sortType = []
          })
        }
        console.log('this.sortType------', this.sortType)
      },
      getUserTypeId(index, e) {
        this.sortType = []
        this.usersTypeList[index].checked = !this.usersTypeList[index].checked
        let count = 0
        this.usersTypeList.forEach(item => {
          if (!item.checked) {
            this.isAllChecked = false
          } else {
            count++
          }
          if (count === 6) {
            this.isAllChecked = true
          }
          if (item.checked) {
            this.sortType.push(Number(item.id))
          }
        })
        console.log("count---",count)
        this.filterCondition.sortType = this.sortType
        console.log('this.sortType', this.sortType)
        this.$apply()
      },
      // 选择客户
      checkboxClient: function(e) {
        console.log("选择客户----------", e.detail.value)
        this.$apply()
      },
    };
    //startNotice 群发通知
    _startNotice() {
      // let data = Object.assign(this.cusAndSub,{
      //   type: this.noticeType
      // }) 
      let data = {
        type: this.noticeType,
        conformUsers:['oqWlD1h6Zurgr6YZVTYAqe5JL9oM','oqWlD1pcdc0dyrxMn7cH_oKTNfFU'],
        subscribeUsers:['oqWlD1h6Zurgr6YZVTYAqe5JL9oM','oqWlD1pcdc0dyrxMn7cH_oKTNfFU']
      }
      let url = `${this.$parent.globalData.commonUrl}/api/startNotice?tk=${this.$parent.globalData.tk}`
      util.interface_post(url, data, this.$parent.globalData.StoreId).then(res => {
        console.log("通知结果---", res)
        if (res.errCode === 0) {
           wx.showToast({
            title: `发布成功`,
            icon: 'none',
            duration: 2000
          })
        } else {
          wx.showToast({
            title: `网络错误${res.errMsg}`,
            icon: 'none',
            duration: 2000
          })
        }
      })
      this.$apply()
    }
    _getUsersForNotice() {
      let url = `${this.$parent.globalData.commonUrl}/api/getUsersForNotice?tk=${this.$parent.globalData.tk}`
      util.interface_post(url, this.filterCondition, this.$parent.globalData.StoreId).then(res => {
        console.log("符合人数---", res)
        if (res.errCode === 0) {
          this.cusAndSub = res.info
          this.subscribeNum = this.cusAndSub.subscribeUsers.length
          this.limitedNum = this.cusAndSub.conformUsers.length
        } else {
          wx.showToast({
            title: `网络错误${res.errMsg}`,
            icon: 'none',
            duration: 2000
          })
        }
      this.$apply()
      })
    }
    //获得在线活动
    _getOlineForNotice() {
      let url = `${this.$parent.globalData.commonUrl}/api/getOlineForNotice?tk=${this.$parent.globalData.tk}`
      util.interface_get(url, this.$parent.globalData.StoreId).then(res => {
        console.log("在线活动---", res)
        if (res.errCode === 0) {
          this.activityList.forEach((item, index) => {
            this.activityList[index].disabled = !res.info[this.activityList[index].type]
          })
          console.log("this.activityList-----------", this.activityList)
        } else {
          wx.showToast({
            title: `网络错误${res.errMsg}`,
            icon: 'none',
            duration: 2000
          })
        }
        this.$apply()
      })
      
    }
    events = {};
    onLoad(e) {
      this._getOlineForNotice()
    }
  }
</script>

<style lang="less">
  .group-page {
    background-color: #fff;
    padding: 10rpx 10rpx;
    height: 100%;
    .group-step1-wrapper,
    .group-step2-wrapper,
    .group-step3-wrapper,
    .group-step4-wrapper,
    .group-step5-wrapper {
      .title {
        font-size: 16px;
        color: #333;
        font-weight: 800;
        margin: 10rpx 0;
      }
      .radio-group {
        display: flex;
        flex-wrap: wrap;
        .label_tag {
          display: flex;
          align-items: center;
          margin: 10rpx 10rpx 10rpx 0;
          .radio-circle {}
          .radio-text {}
        }
      }
    }
    .group-step2-wrapper {
      .selectAll {
        // margin-bottom: 10rpx;
      }
    }
    .group-step3-wrapper {}
    .group-step4-wrapper {}
    .group-step5-wrapper {}
    .group-show-wrapper {
      margin: 20rpx 0;
      .result-text {
        font-weight: 800;
        color: #333;
        font-size: 14px;
      }
    }
  }
</style>

<style lang="less" src="../../../mixins/less/btn.less">

</style>
