<template>
  <view class="activityNotice-wrapper">
    <!-- 项目活动图 -->
    <view class='upload-box'>
      <text class='uploadText'>第一步：项目活动图</text>
      <image @tap.stop='chooseItemImage' src='{{itemImgUrl}}' class='addPic'></image>
    </view>
    <!-- 项目背景图 -->
    <view class='upload-box'>
      <text class='uploadText'>第二步：活动背景图</text>
      <image @tap.stop='chooseBgImage' src='{{bgImgUrl}}' class='addPic'></image>
    </view>
    <!-- 活动主题 -->
    <view class='activeTheme'>
      <view class='title'>第三步：活动主题</view>
      <input placeholder='请输入主题名' value="{{activityTheme}}" @blur='getActivityTheme' class='inputArea'></input>
    </view>
    <!-- 限制条件 -->
    <view class='activeTheme'>
      <view class='title'>第四步：限制条件</view>
      <input placeholder='请输入限制条件' value="{{activityLimit}}" @blur='getActivityLimit' class='inputArea'></input>
    </view>
    <!-- 活动时间 -->
    <view class='activeTheme'>
      <view class='title'>第五步：活动开始时间</view>
      <picker mode="date" value="{{beginDate}}" start="2018-08-01" end="2022-09-01" @change="bindBeginDateChange">
        <view class="picker">
          {{beginDate}}
        </view>
      </picker>
    </view>
    <view class='activeTheme'>
      <view class='title'>第六步：活动结束时间</view>
      <picker mode="date" value="{{endDate}}" start="2018-08-01" end="2022-09-01" @change="bindEndDateChange">
        <view class="picker">
          {{endDate}}
        </view>
      </picker>
    </view>
    <view class='content'>
      <textarea class='noticeContent' value="{{activityContent}}" @input='getActivityContent' placeholder='请输入活动内容' maxlength='140'></textarea>
    </view>
    <!-- <view class='content'>
                  <textarea class='noticeContent' value="{{activityRule}}" @input='getActivityRule' placeholder='第八步：请输入活动细则' maxlength='140'></textarea>
              </view> -->
    <button @tap='save'>确认发布</button>
  </view>
</template>

<script>
  import wepy from 'wepy';
  const util = require('../../../utils/utils.js');
  export default class activityNotice extends wepy.page {
    config = {
      navigationBarTitleText: '活动通知'
    };
    data = {
      beginDate: '2018-08-30',
      endDate: '2022-12-30',
      activityTheme: "",
      activityLimit: "",
      activityContent: "",
      activityRule: "",
      itemImgUrl: '../../../images/add_pic.png',
      bgImgUrl: '../../../images/add_pic.png',
      uploadItemImgUrl: "",
      uploadBgImgUrl: "",
    };
    methods = {
      //活动主题
      getActivityTheme(e) {
        this.activityTheme = e.detail.value;
      },
      //限制条件
      getActivityLimit(e) {
        this.activityLimit = e.detail.value;
      },
      //活动内容
      getActivityContent(e) {
        this.activityContent = e.detail.value;
      },
      //活动细则
      // getActivityRule(e) {
      //   this.activityRule = e.detail.value;
      //   console.log(this.activityRule);
      // },
      //选择照片
      chooseItemImage() {
        let _this = this;
        wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'],
          success: function(res) {
            var tempFilePaths = res.tempFilePaths; // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            _this.itemImgUrl = tempFilePaths[0];
            _this.$apply();
            wx.uploadFile({
              url: `${_this.$parent.globalData.commonUrl}/api/photoUpload?tk=${_this.$parent.globalData.tk}`,
              filePath: _this.itemImgUrl,
              name: "file",
              header: {
                'content-type': 'multipart/form-data'
              },
              success: res => {
                if (res.statusCode === 200) {
                  _this.uploadItemImgUrl = JSON.parse(res.data).photoURL;
                  console.log('返回的图片：----------------------------', _this.uploadItemImgUrl);
                }
              }
            })
          }
        });
      },
      chooseBgImage() {
        let _this = this;
        wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'],
          success: function(res) {
            var tempFilePaths = res.tempFilePaths; // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            _this.bgImgUrl = tempFilePaths[0];
            _this.$apply();
            wx.uploadFile({
              url: `${_this.$parent.globalData.commonUrl}/api/photoUpload?tk=${_this.$parent.globalData.tk}`,
              filePath: _this.bgImgUrl,
              name: "file",
              header: {
                'content-type': 'multipart/form-data'
              },
              success: res => {
                if (res.statusCode === 200) {
                  _this.uploadBgImgUrl = JSON.parse(res.data).photoURL;
                  console.log('返回的图片：----------------------------', _this.uploadBgImgUrl);
                }
              }
            })
          }
        });
      },
      //开始时间
      bindBeginDateChange(e) {
        console.log('开始日期', e.detail.value);
        this.beginDate = e.detail.value;
      },
      //结束时间
      bindEndDateChange(e) {
        console.log('结束日期', e.detail.value);
        this.endDate = e.detail.value;
      },
      //保存发布
      save() {
        let _this = this;
        let url = `${this.$parent.globalData.commonUrl}/api/createActivity?tk=${this.$parent.globalData.tk}`;
        let data = {
          name: this.activityTheme,
          limit: this.activityLimit,
          startTime: this.beginDate,
          endTime: this.endDate,
          content: this.activityContent,
          rule: this.activityRule,
          image: this.uploadItemImgUrl,
          bgImage: this.uploadBgImgUrl
        };
        util.interface_post(url, data,this.$parent.globalData.StoreId).then(res => {
          // console.log(res)
          if (res.errCode === 1) {
            wx.showToast({
              title: '请信息填写完整',
               icon: 'none',
              duration: 2000
            })
          }
          _this.activityTheme = "";
          _this.activityLimit = "";
          _this.activityContent = "";
          _this.activityRule = "";
          _this.itemImgUrl = "../../../images/add_pic.png";
          _this.bgImgUrl = "../../../images/add_pic.png";
          _this.$apply();
        })
      }
    };
    onLoad() {
      this.beginDate = util.nowDate();
    }
  }
</script>

<style lang="less">
  .activityNotice-wrapper {
    padding: 20rpx 30rpx;
  }
  .upload-box {
    background-color: #fff;
    display: flex;
    justify-content: space-between;
    padding: 20rpx 30rpx;
    margin-bottom: 30rpx;
  }
  .uploadText {
    padding-top: 50rpx;
    font-size: 30rpx;
  }
  .addPic {
    width: 150rpx;
    height: 150rpx;
  }
  .activeTheme {
    background-color: #fff;
    padding: 20rpx 30rpx;
    display: flex;
    justify-content: space-between;
    margin-bottom: 30rpx;
  }
  .activeTheme .title {
    margin-top: 6rpx;
    width: 310rpx;
    font-size: 30rpx;
  }
  .inputArea {
    text-align: right;
  }
  .noticeContent {
    background-color: #fff;
    width: 100%;
    height: 150rpx;
  }
  .picker {
    background-color: #ccc;
    color: #fff;
  }
  .content {
    margin-bottom: 30rpx;
  }
</style>