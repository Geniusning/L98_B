<template>
  <view class="integralDetail_wrapper">
    <view class="integralDetail_top">
      <view class="total_box" style="margin-top: 10rpx;margin-left:14rpx;position:absolute;top:5rpx;">
        合计次数：{{totalTimes}}
      </view>
      <view class="select">
        <image src="../../../images/shaixuan.png" mode="scaleToFill" lazy-load="true" class="selectIcon"></image>
        <picker class="pickerbox" @change="bindPickerChange" value="{{pickindex}}" range="{{pickerArray}}" range-key="name">
          <view class="picker">
            {{pickerArray[pickindex].name}}
          </view>
        </picker>
      </view>
    </view>
    <view class="integralDetail_bottom">
      <scroll-view scroll-y scroll-with-animation style="height:{{winHeight}}rpx">
        <view class="list">
          <view class="item">发生日期</view>
          <view class="item">参与人</view>
          <view class="item">活动名称</view>
        </view>
        <repeat for="{{recordData}}" key="index" index="index" item="item">
          <view class="list">
            <view class="item">{{item.milliTime}}</view>
            <view class="item">
              <image class="avatarIcon" src="{{item.headUrl}}" mode="scaleToFill" lazy-load="false"></image>
            </view>
            <view class="item">{{item.actTheme}}</view>
          </view>
        </repeat>
      </scroll-view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import util from '../../../utils/utils.js'
  export default class activityNoticeStatDetail extends wepy.page {
    config = {
      navigationBarTitleText: '详情'
    };
    data = {
      pickindex: 0,
      paramDate: "",
      totalData: 0,
      pageType:"",
      totalTimes: 0,
      date: "2020-01-01",
      recordData: [],
      allTypesData: [],
      selectAllData: [],
      pickerArray: [{
        name: "全部",
        id: "all"
      }],
      winHeight: "",
    };
    methods = {
      bindStartDateChange(e) {
        this.startDate = e.detail.value
        let flag = util.compareDate(this.startDate, this.endDate)
        if (!flag) {
          wx.showToast({
            title: "不能大于结束日期",
            icon: 'none',
            duration: 2000
          })
          this.startDate = util.someDayLater(util.nowDate(), -30, '-');
        }
      },
      bindEndDateChange(e) {
        this.endDate = e.detail.value
        let flag = util.compareDate(this.startDate, this.endDate)
        if (!flag) {
          wx.showToast({
            title: "不能小于开始日期",
            icon: 'none',
            duration: 2000
          })
          this.endDate = util.nowDate();
        }
      },
      selecData() {},
      bindPickerChange(e) {
        this.totalTimes = 0;
        this.pickindex = e.detail.value
        var dataType
        console.log(this.pickerArray[parseInt(e.detail.value)])
        dataType = this.pickerArray[parseInt(e.detail.value)].id
        console.log("dataType----", dataType);
        this._judgeMarketType(this.pageType, dataType)
      },
    };
    _judgeMarketType(pageType, dataType) {
      this.recordData = [];
      if (dataType === "all") {
        this.recordData = this.selectAllData
        this.recordData.forEach(item => {
          this.totalTimes++
        })
        return
      }
      this.selectAllData.forEach(item => {
        if (item.actTheme== dataType) {
          this.totalTimes++
          this.recordData.push(item)
        }
      })
    };
    _handleItem(tempPickArray, item) {
      item["milliTime"] = util.timestampToTime(item.milliTime).slice(11)
      item["actTheme"] = item.theme
      item["headUrl"] = item.userInfo.headImgUrl
      if (item.activityType == this.pageType) {
        this.totalTimes++
        console.log("coming in")
        this.recordData.push(item)
        tempPickArray.push({
          name: item["actTheme"],
          id: item["actTheme"]
        })
      }
    };
    _loadActivityDetail(date) {
      let url = `${this.$parent.globalData.commonUrl}/api/getActivityStat?tk=${this.$parent.globalData.tk}&date=${date}`
      util.interface_get(url).then(res => {
        console.log("data----", res)
        if (res.errCode === 0) {
          this.allTypesData = res.activityDetailArr.sort(util.sortByKey("milliTime"))
          this.allTypesData.forEach(item => {
            this._handleItem(this.pickerArray, item)
          })
          this.selectAllData = this.recordData;
          var pickArr = []
          pickArr = util.delSameItem(this.pickerArray) //去重
          this.pickerArray = pickArr
          console.log("this.pickerArray------", this.pickerArray)
        }
        this.$apply()
      })
    };
    events = {};
    async onLoad(e) {
        console.log(e)
      this.winHeight = util.getScrollHeight(144)
      this.paramDate = e.date.trim()
      this.pageType = e.type
      console.log("date-----", this.paramDate)
      console.log("pageType-----", this.pageType)
      this._loadActivityDetail(this.paramDate)
    }
  }
</script>
<style lang="less" src="../recommendAndGiftStat/recommendAndGift.less"></style>