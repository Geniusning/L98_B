<template>
  <view class="cardList-container">
    <view wx:if="{{cardList.length}}">
      <view class="stepTwo-wrapper">
        <view class="title">优惠券列表</view>
        <scroll-view scroll-y class="scrollView" style="height:{{winHeight}}rpx;">
          <checkbox-group @change="checkboxCoupon">
            <repeat for="{{cardList}}" key="index">
              <label data-test="{{item.content}}" class="checkbox">
                <checkbox color="#FFBA00" checked="{{item.checked}}" value="{{item.couponID}}"/>
                  <cardListCom :item="item" ></cardListCom>
              </label>
            </repeat>
          </checkbox-group>
        </scroll-view>
      </view>
      <view class="btnBox" wx:if="{{isShowBtn && cardList.length}}">
        <button class="cardListBtn left-btn" style="width:30%" @tap.stop="back">返回</button>
        <button class="cardListBtn center-btn" style="width:30%" @tap.stop="save">确定</button>
      </view>
      <view class="btnBox" wx:if="{{showDeleteBtn && cardList.length}}">
        <button class="cardListBtn center-btn" @tap.stop="deleteDicount">删除</button>
        <!-- <button class="cardListBtn" @tap="editCard">编辑</button> -->
      </view>
    </view>
    <!-- loading -->
    <view wx:else class="noCard">暂无优惠券</view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import util from '../../../utils/utils.js'
  import cardListCom from '../../../components/cardList'
  export default class cardList extends wepy.page {
    config = {
      navigationBarTitleText: '优惠券列表'
    };
    data = {
      winHeight: "",
      cardList: [],
      cardIdList: [],
      selectedCouponId: [],
      channelIndex: 0,
      showDeleteBtn: false,
      deleteIDs: {},
      timeModel: 'instant',
      date: '2018-08-20',
      isTrue: true,
      isFalse: false,
      typeIndex: null,
      isShowBtn: true
    };
    components = {
      cardListCom: cardListCom
    };
    methods = {
      // 确定优惠券
      save() {
        let pageState = getCurrentPages()
        console.log("pageState--------",pageState)
        if (this.selectedCouponId.length > 0) {
          wx.navigateBack({
            delta: 1
          });
        } else {
          wx.showToast({
            title: '请选择优惠券',
            icon: 'success',
            duration: 2000
          });
        }
      },
      //删除优惠券
      deleteDicount() {
        let _this = this;
        let data = {
          couponIDs: _this.cardIdList
        }
        let url = `${this.$parent.globalData.commonUrl}/api/deleCoupons?tk=${_this.$parent.globalData.tk}`
        console.log(_this.$parent.globalData.tk);
        util.interface_post(url, data, this.$parent.globalData.StoreId).then(res => {
          console.log('是否删除成功：·······················', res);
          _this.getCardList().then(res => {
            console.log('删除后的优惠券列表', res);
            wx.showToast({
              title: '删除成功',
              icon: 'success',
              duration: 2000
            });
            _this.cardList = res;
            _this.$apply();
          });
        })
      },
      // 返回上一页
      back() {
        if (this.typeIndex == 'leagle') {
          wx.redirectTo({
            url: '/pages/marketing/friendBusiness/friendBusiness'
          });
        } else {
          wx.navigateBack({
            delta: 1
          });
        }
      },
      // 优惠券选择
      checkboxCoupon(e) {
        this.selectedCouponId = e.detail.value;
        console.log(this.selectedCouponId);
        if (!this.showDeleteBtn) { //不是删除优惠券操作
          var temparr = [];
          if (this.selectedCouponId.length > 1) {
            wx.showToast({
              title: '最多选择一条',
              icon: 'none',
              duration: 1500
            });
            //前两个选中的设置true,第三个设置false,限制选2个
            temparr = this.cardList.map(item => {
              if (item['couponID'] == this.selectedCouponId[1]) {
                item['checked'] = this.isFalse;
              }
              if (item['couponID'] == this.selectedCouponId[0]) {
                item['checked'] = this.isTrue;
              }
              return item;
            });
            this.setData({
              cardList: temparr
            });
            //删除第二个选中的id
            this.selectedCouponId.splice(1, 1);
          } else {
            let tempCoupon = this.cardList.filter(item => {
              return item['couponID'] == this.selectedCouponId[0];
            });
            if (this.typeIndex == 1) { //一等奖
              this.$parent.globalData.singleGameFirstPrize = tempCoupon[0];
            } else if (this.typeIndex == 2) { //二等奖
              this.$parent.globalData.singleGameSecondPrize = tempCoupon[0];
            } else if (this.typeIndex == 'leagle') {
              this.$parent.globalData.leaglePrize = tempCoupon[0];
              console.log(" console.log(this.$parent.globalData);----",this.$parent.globalData)
            } else if (this.typeIndex == 'recommend') {
              this.$parent.globalData.recommendPrize = tempCoupon[0];
            } else if (this.typeIndex == 'CouponA') {
              this.$parent.globalData.CouponA = tempCoupon[0];
            } else if (this.typeIndex == 'CouponB') {
              this.$parent.globalData.CouponB = tempCoupon[0];
            } else { //二等奖
              this.$parent.globalData.singleGameThirdPrize = tempCoupon[0];
            }
          }
          this.cardIdList = this.selectedCouponId;
        } else {
          //删除优惠券操作
          this.cardIdList = this.selectedCouponId;
        }
      }
    };
    getCardList() {
      return new Promise((resolve, reject) => {
        wx.showLoading({
          title: '加载中',
          mask: true
        })
        wx.request({
          url: `${this.$parent.globalData.commonUrl}/api/loadCoupons?tk=${this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          success: function(res) {
            if (res.statusCode === 200) {
              wx.hideLoading()
              resolve(res.data);
            }
          }
        });
      });
    }
    async onLoad(options) {
      console.log('onload-options``````````````````````````````````````````', options);
      this.typeIndex = options.type;
      switch (options.type) {
        case 'showList':
          this.isShowBtn = false;
          this.showDeleteBtn = true;
          break;
        case 'leagle':
          this.typeIndex = 'leagle';
          break;
        case 'recommend':
          this.typeIndex = 'recommend';
          break;
        default:
          break;
      }
      this.cardList = await this.getCardList();
      console.log("cardList-------------", this.cardList)
      this.$apply();
    }
    onShow() {
      this.winHeight = util.getScrollHeight(220);
    }
    // Other properties
  }
</script>

<style lang="less">
  .cardList-container {
    background-color: #fff;
    padding: 10rpx 20rpx;
    height: 100%;
  }
  .noCard {
    margin: 50% 0;
    width: 100%;
    text-align: center;
    color: #ccc;
    font-size: 16px
  }
  .stepTwo-wrapper {
    background: #fff;
    padding: 10rpx;
  }
  .scrollView {
    margin-top: 30rpx;
  }
  .checkbox {
    display: flex;
    margin-bottom: 20rpx;
  }
  .discountItem {
    /* width: 400rpx; */
    flex: 1;
    height: 150rpx;
    padding: 0 20rpx;
    border: 1px solid #ccc;
    display: flex;
    justify-content: space-between;
  }
  .discountItem-left {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
  }
  .discountItem-left .title {
    font-size: 38rpx;
    color: #ffba00;
  }
  .discountItem-left .time {
    font-size: 32rpx;
    color: #333;
  }
  .discountItem-right {
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
  }
  .btn-wrapper {
    margin-top: 30rpx;
  }
  .btn-wrapper button {
    background-color: #fff;
  }
  .btnBox {
    display: flex;
    justify-content: space-between;
    height: 90rpx;
  }
  .cardListBtn {
    width: 100%;
  }
</style>
<style lang="less" src="../../../mixins/less/btn.less">

</style>