<template>
  <view class='gameList-wrapper'>
    <view>
      <view wx:if="{{pageType=='game'}}">
        <scroll-view scroll-y class='scrollView' style="max-height:{{winHeight}}rpx">
          <checkbox-group @change="checkboxGame">
            <repeat for="{{gameList}}" key='index'>
              <label data-test="{{item.content}}" class="checkbox">
                  <checkbox
                    color="#FFBA00"
                    style="padding-top:60rpx"
                    checked='{{item.checked}}'
                    value="{{item.arenaID}}"
                  />
                  <view class='gameList'>
                    <view class='gameItem'>
                      <view
                        class='isFinishTrue'
                        wx:if="{{item.isFinish}}"
                      >已结束</view>
                      <view
                        class='isFinishFalse'
                        wx:else
                      >进行中</view>
                      <view class='title'>{{item.name}}</view>
                      <view class='gameInfo'>
                        <view class='gameInfo-left'>
                          <view class='time'>开始时间：{{item.publishTime}}</view>
                          <view class='time'>结束时间：{{item.endTime}}</view>
                        </view>
                        <view class='gameInfo-right'>
                          <view class='num'>人数：{{item.maxNumberOfPlayer}}</view>
                          <view class='num'>局数：{{item.maxRoundNumber}}</view>
                        </view>
                      </view>
                    </view>
                  </view>
                </label>
            </repeat>
          </checkbox-group>
        </scroll-view>
        <view wx:if="{{scheduleGameInfo}}" class="schedule-wrapper">
          <text>循坏赛正在进行中</text>
          <text>发布时间：{{scheduleGameInfo.publishTime}}</text>
        </view>
      </view>
    </view>
    <view class='noGame' wx:if="{{!gameList.length}}">
      暂无内容
    </view>
    <view class='btn-wrapper'>
      <button class='delete left-btn' @tap='deleteGame' disabled="{{scheduleGameInfo}}">删除比赛</button>
      <button class='delete center-btn' disabled="{{!scheduleGameInfo}}" @tap='deleteSchelGame'>删除循环赛任务</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import util from '../../../utils/utils.js';
  export default class singleGameList extends wepy.page {
    config = {
      navigationBarTitleText: '比赛状况'
    };
    data = {
      arenaIDs: [],
      winHeight: '',
      gameList: [],
      pageType: "",
      hasSchedule: false,
      scheduleGameInfo: null,
    };
    methods = {
      checkboxGame(e) {
        this.arenaIDs = e.detail.value;
      },
      deleteGame() {
        if (this.arenaIDs.length === 0) {
          wx.showToast({
            title: '请勾选删除比赛',
            icon: 'none',
            duration: 2000
          });
          return
        }
        let _this = this;
        wx.request({
          url: `${this.$parent.globalData.commonUrl}/api/deleteArena?tk=${this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          data: {
            arenaIDs: _this.arenaIDs
          },
          header: {
            'content-type': 'application/json'
          },
          method: 'POST',
          success: async function(res) {
            console.log(res);
            if (res.statusCode === 200) {
              wx.showToast({
                title: '删除成功',
                icon: 'success',
                duration: 2000
              });
              let gameListData = await _this.getGameList();
              _this.getHandledGameList(gameListData);
              _this.$apply()
            }
          }
        });
      },
      //删除循环赛任务
      deleteSchelGame() {
        var _this = this
        wx.request({
          url: `${this.$parent.globalData.commonUrl}/api/delArenaScheduleTask?tk=${this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          header: {
            'content-type': 'application/json'
          },
          method: 'POST',
          success: async function(res) {
            console.log('删除计划：', res);
            if (res.data.errCode === 0) {
              wx.showToast({
                title: '删除成功',
                icon: 'success',
                duration: 2000
              });
              let gameListData = await _this.getGameList();
              _this.getHandledGameList(gameListData);
              _this.$apply()
            }else{
                wx.showToast({
                title: `${res.data.errMsg}`,
                icon: 'none',
                duration: 2000
              });
            }
          }
        });
      }
    };
    getHandledGameList(gameListData) {
      let nowTime = new Date().getTime();
      let tempgameListData = gameListData.map(item => {
        if (Number(item.endTime) < Math.round(nowTime / 1000)) {
          item['isFinish'] = true;
        } else {
          item['isFinish'] = false;
        }
        item.publishTime = util.timestampToTime(item.publishTime);
        item.endTime = util.timestampToTime(item.endTime);
        return item
      });
      this.gameList = tempgameListData;
      this.$apply();
    };
    getGameList() {
      return new Promise((resolve, reject) => {
        let _this = this;
        wx.request({
          url: `${_this.$parent.globalData.commonUrl}/api/loadArenas?tk=${_this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          success: function(res) {
            console.log(res)
            if (res.statusCode === 200) {
              resolve(res.data.arenaInfos);
            } else {
              reject(err);
            }
          }
        });
      });
    };
    //拉取循环赛任务
    loadArenaScheduleTask() {
      return new Promise((resolve, reject) => {
        let _this = this;
        wx.request({
          url: `${_this.$parent.globalData.commonUrl}/api/loadArenaScheduleTask?tk=${_this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          success: function(res) {
            console.log("拉取循环赛任务----", res)
            if (res.statusCode === 200) {
              resolve(res.data.cfg);
            } else {
              wx.showToast({
                title: `${res.errMsg}`,
                icon: 'none',
                duration: 2000
              });
              reject(res.errMsg);
            }
          }
        });
      });
    };
    judgeCondition(type) {
      let conditionType = ""
      switch (type) {
        case 0:
          conditionType = "访问首页，人人有礼"
          break;
        case 1:
          conditionType = "扫核销码，核销有礼"
          break;
        case 2:
          conditionType = "访问游戏大厅，参赛有礼"
          break;
        case 3:
          conditionType = "比赛完成页，参赛安慰奖"
          break;
        case 4:
          conditionType = "非访问状态，系统通知(即用微信订单通知)"
          break;
        default:
          break;
      }
      return conditionType
    };
    async onShow() {}
    async onLoad(e) {
      //获取屏幕高度
      this.winHeight = util.getScrollHeight(400)
      this.pageType = e.type;
      if (this.pageType === "game") {
        let gameListData = await this.getGameList();
        this.scheduleGameInfo = await this.loadArenaScheduleTask();
        this.$apply()
        console.log("this.scheduleGameInfo----------", this.scheduleGameInfo)
        this.getHandledGameList(gameListData);
        wx.setNavigationBarTitle({
          title: "比赛状况"
        })
      }
    }
  }
</script>

<style lang="less">
  .gameList-wrapper {
    padding: 20rpx 20rpx;
    position: relative;
    height: 100%;
    box-sizing: border-box;
    .noGame {
      width: 100%;
      text-align: center;
      font-size: 40rpx;
      color: #ccc;
      margin: 40% auto;
    }
    .scrollView {
      // max-height: 800rpx;
      overflow: hidden;
      .checkbox {
        display: flex;
        margin-bottom: 20rpx;
        background: #fff;
        padding-left: 4rpx;
        .gameList {
          background-color: #fff;
          width: 100%;
          box-sizing: border-box;
          padding: 10rpx 20rpx;
          .gameItem {
            width: 100%;
            position: relative;
            .isFinishTrue,
            .isFinishFalse {
              padding: 6rpx 10rpx;
              position: absolute;
              top: 10rpx;
              right: 120rpx;
              transform: rotate(-20deg);
            }
            .isFinishTrue {
              border: 1px solid #333;
            }
            .isFinishFalse {
              border: 1px solid red;
            }
            .title {
              font-size: 30rpx;
              font-weight: bold;
              color: #333;
              margin-bottom: 20rpx;
            }
            .gameInfo {
              display: flex;
              justify-content: space-between;
              .gameInfo-left {
                .time {
                  margin-bottom: 10rpx;
                }
              }
              .gameInfo-right {
                .num {
                  margin-bottom: 10rpx;
                }
              }
            }
          }
        }
      }
    }
    .schedule-wrapper {
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      align-items: center;
      height: 200rpx;
      background-color: #fff;
    }
    .btn-wrapper {
      margin-top: 30rpx;
      display: flex;
    }
  }
</style>

<style lang="less" src="../../../mixins/less/btn.less">

</style>
