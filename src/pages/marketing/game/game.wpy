<template>
  <view class='game-container'>
    <!-- <view class='beginTime-wrapper'>
            <view class='title'>开始时间：</view>
            <view class='beginDate'>
              <picker mode="date" value="{{beginDate}}" start="2018-01-01" end="2025-09-01" @change="bindBeginDateChange">
                <view class="picker">
                  开始日期: {{beginDate}}
                </view>
              </picker>
            </view>
            <view class='beginTime'>
              <picker mode="time" value="{{beginTime}}" start="00:00" end="24:00" @change="bindBeginTimeChange">
                <view class="picker">
                  开始时间: {{beginTime}}
                </view>
              </picker>
            </view>
          </view> -->
             <!-- 设置人数 -->
    <view class='juNum-wrapper'>
      <view class='title'>第一步:比赛冠名</view>
      <input maxlength='6' @blur="selectTheme" placeholder='请填入比赛冠名'></input>
    </view>
    <view class='prize-wrapper'>
      <view class='title'>第二步：游戏奖品：</view>
      <view class='prizeItem'>
        <view style='width:400rpx;display:flex'>
          <view class='name'>一等奖：</view>
          <input disabled class='prizeName' value='{{firstPrize.content}}' placeholder='请选择游戏奖品'></input>
        </view>
        <view style='margin-top:8rpx' @tap="SelectfirstPrize">选择奖品</view>
      </view>
      <view class='prizeItem'>
        <view style='width:400rpx;display:flex'>
          <view class='name'>二等奖：</view>
          <input disabled class='prizeName' value='{{secondPrize.content}}' placeholder='请选择游戏奖品'></input>
        </view>
        <view style='margin-top:8rpx' @tap="SelectSecondPrize">选择奖品</view>
      </view>
      <view class='prizeItem'>
        <view style='width:400rpx;display:flex'>
          <view class='name'>三等奖：</view>
          <input disabled class='prizeName' value='{{thirdPrize.content}}' placeholder='请选择游戏奖品'></input>
        </view>
        <view style='margin-top:8rpx' @tap="SelectThirstPrize">选择奖品</view>
      </view>
    </view>
    <!-- 设置局数 -->
    <view class='juNum-wrapper'>
      <view class='title'>第三步：每人参赛局数：</view>
      <!-- <input type='number' @blur="chooseRound" placeholder='请填入局数'></input> -->
      <view class='timeBox'>
        <repeat for="{{gameNums}}" key="index">
          <text class="timeItem {{roundShow==item.id?'active':''}}" data-index="{{item.id}}" @tap.stop='selectRoundItem'>{{item.value}}</text>
        </repeat>
      </view>
    </view>
    <!-- 设置人数 -->
    <!-- <view class='juNum-wrapper'>
            <view class='title'>设置人数：</view>
            <input type='number' @blur="choosePeopleNum" placeholder='请填入人数'></input>
          </view> -->
    <!-- 设置循环赛 -->
    <view class='circulate-wrapper'>
      <view class='title'>第四步：是否循环赛：</view>
      <view class='circle-box'>
        <radio-group class="radio-group" @change="radioChange">
          <label class="radio" wx:for="{{circleItem}}" wx:key>
                      <radio color='orange' value="{{item.name}}" checked="{{item.checked}}" />{{item.value}}
                  </label>
        </radio-group>
      </view>
      <view class='circleTime-select' wx:if='{{circletime}}'>
        <picker mode="time" value="{{oneTime}}" start="00:00" end="24:00" @change="bindOneTimeChange">
          <view class="picker">
            第一开奖时间：{{oneTime}}
          </view>
        </picker>
        <picker mode="time" value="{{twoTime}}" start="00:00" end="24:00" @change="bindTwoTimeChange">
          <view class="picker">
            第二开奖时间：{{twoTime}}
          </view>
        </picker>
        <picker mode="time" value="{{threeTime}}" start="00:00" end="24:00" @change="bindTreeTimeChange">
          <view class="picker">
            第三开奖时间：{{threeTime}}
          </view>
        </picker>
      </view>
    </view>
    <!-- 设置个人赛或团体赛 -->
      <view class='circulate-wrapper'>
      <view class='title'>第五步：选择 个人/团体赛：</view>
      <view class='circle-box'>
        <radio-group class="radio-group" @change="radioChangeTeam">
          <label class="radio" wx:for="{{gameTypeList}}" wx:key>
                      <radio color='orange' value="{{item.name}}" checked="{{item.checked}}" />{{item.value}}
                  </label>
        </radio-group>
      </view>
    </view>
    <view class='juNum-wrapper'>
      <view class='title'>第六步：开始时间：</view>
      <view class='startTime' style='margin:15rpx 0'>即时（发布后立即开始）</view>
      <!-- <picker mode="date" value="{{Publicdate}}" start="2018-01-01" end="2030-09-01" @change="bindPublicDateChange">
          <view class="picker">
            发布日期：{{Publicdate}}
          </view>
        </picker>
        <picker mode="time" value="{{PublicTime}}" start="00:00" end="24:00" bindchange="bindPublicTimeChange">
          <view class="picker">
            发布时间: {{PublicTime}}
          </view>
        </picker> -->
    </view>
    <view class='endTime-wrapper' wx:if='{{!circletime}}'>
      <view class='title'>第七步：结束时间：</view>
      <view class='beginDate'>
        <picker mode="date" value="{{endDate}}" start="2018-01-01" end="2025-09-01" @change="bindEndDateChange">
          <view class="picker">
            结束日期: {{endDate}}
          </view>
        </picker>
      </view>
      <view class='beginTime'>
        <picker mode="time" value="{{endTime}}" start="00:00" end="24:00" @change="bindEndTimeChange">
          <view class="picker">
            结束时间: {{endTime}}
          </view>
        </picker>
      </view>
    </view>
    <view style='padding-bottom:40rpx'>
      <button class='btn center-btn' @tap='singleGameBtn'>确定</button>
    </view>
    <!-- </swiper-item> -->
    </swiper>
  </view>
</template>

<script>
import wepy from 'wepy';
import util from '../../../utils/utils.js';
export default class game extends wepy.page {
  config = {
    navigationBarTitleText: '排名赛设置'
  };
  data = {
    firstPrize: {},
    secondPrize: {},
    thirdPrize: {},
    Round: 1,
    oneNumber: null,
    twoNumber: null,
    threeNumber: null,
    oneTime: "",
    twoTime: "",
    threeTime: "",
    EndTimes: [],
    roundShow: '1',
    peopleNum: 500,
    PublicTime: '18:00',
    Publicdate: '2018-05-20',
    startTime: "",
    // beginDate: '2018-05-20',
    // beginTime: '18:00',
    // beginTotalTime: '',
    endDate: '2018-06-30',
    endTime: '20:00',
    endTotalTime: '',
    circletime: false,
    currentTab: 0,
    radioText: 'day',
    weekindex: 0,
    gameNums: [{
      id: '3',
      value: '3'
    },
    {
      id: '6',
      value: '6',
      checked: 'true'
    },
    {
      id: '9',
      value: '9'
    },
    {
      id: '12',
      value: '12'
    },
    {
      id: '15',
      value: '15'
    },
    {
      id: '21',
      value: '21'
    },
    {
      id: '30',
      value: '30'
    }
    ],
    circleItem: [{
      name: 'isCircle',
      value: '是'
    },
    {
      name: 'noCircle',
      value: '否',
      checked: 'true'
    }
    ],
    gameTypeList: [{
      name: '0',
      value: '个人赛',
      checked: 'true'
    },
    {
      name: '1',
      value: '团体赛'
    }
    ],
    week: ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日'],
    theme: "",
    typeGame: "",
  };
  methods = {
    // 一等奖选择
    SelectfirstPrize: function () {
      console.log('111');
      wx.navigateTo({
        url: '/pages/marketing/cardList/cardList?singletype=1'
      });
    },
    // 二等奖选择
    SelectSecondPrize: function () {
      wx.navigateTo({
        url: '/pages/marketing/cardList/cardList?singletype=2'
      });
    },
    //三等奖选择
    SelectThirstPrize: function () {
      wx.navigateTo({
        url: '/pages/marketing/cardList/cardList?singletype=3'
      });
    },
    //设置主题
    selectTheme(e) {
      this.theme = e.detail.value;
      console.log(this.theme);
    },
    //设置发布日期
    bindPublicDateChange: function (e) {
      this.Publicdate = e.detail.value;
    },
    //设置个人赛或者团体赛
    radioChangeTeam(e) {
      this.typeGame = e.detail.value;
      console.log(this.typeGame)
    },
    //设置发布时间
    bindPublicTimeChange: function (e) {
      this.PublicTime = e.detail.value;
      let pulicTime = Number(e.detail.value.slice(0, 2)) * 60 + Number(e.detail.value.slice(3, 5))
      console.log(pulicTime);
      if (pulicTime > this.oneNumber && this.circletime) {
        wx.showToast({
          title: '时间要小于第一开奖时间',
          icon: 'none',
          duration: 2000
        });
        this.PublicTime = "";
      }
    },
    //选择局数
    selectRoundItem: function (e) {
      let round = e.target.dataset.index;
      this.Round = round;
      console.log('选择局数：', this.Round)
      this.roundShow = round;
    },
    //第一时间段
    bindOneTimeChange: function (e) {
      this.oneTime = e.detail.value;
      var nowTime = util.timestampToTime(new Date().getTime()).slice(11);
      var nowTimeSeconds = Number(nowTime.slice(0, 2)) * 60 + Number(nowTime.slice(3, 5));
      this.oneNumber = Number(this.oneTime.slice(0, 2)) * 60 + Number(this.oneTime.slice(3, 5));
      console.log('当前时间秒数',nowTimeSeconds)
      console.log('选择时间秒数',this.oneNumber)
      if (nowTimeSeconds > this.oneNumber) {
        console.log('Jinlaile')
        wx.showToast({
          title: '时间要大于当前时间',
          icon: 'none',
          duration: 2000
        });
        this.oneTime = ""
        return;
      }else if((this.oneNumber-nowTimeSeconds)<10){
        wx.showToast({
          title: '间隔大于10分钟',
          icon: 'none',
          duration: 2000
        });
        this.oneTime = ""
        return;
      }
      this.EndTimes[0] = this.oneNumber;
      console.log(this.EndTimes);
    },
    //第二时间段
    bindTwoTimeChange: function (e) {
      this.twoTime = e.detail.value;
      this.twoNumber = Number(this.twoTime.slice(0, 2)) * 60 + Number(this.twoTime.slice(3, 5))
      if (this.twoNumber < this.oneNumber) {
        wx.showToast({
          title: '时间要大于第一个时间段',
          icon: 'none',
          duration: 2000
        });
        this.twoTime = ""
        return;
      }else if((this.twoNumber-this.oneNumber)<10){
         wx.showToast({
          title: '间隔大于10分钟',
          icon: 'none',
          duration: 2000
        });
        this.twoTime = ""
        return;
      }
      this.EndTimes[1] = this.twoNumber;
    },
    //第三时间段
    bindTreeTimeChange: function (e) {
      this.threeTime = e.detail.value;
      this.threeNumber = Number(this.threeTime.slice(0, 2)) * 60 + Number(this.threeTime.slice(3, 5))
      if (this.threeNumber < this.twoNumber) {
        wx.showToast({
          title: '时间要大于第二个时间段',
          icon: 'none',
          duration: 2000
        });
        this.threeTime = ""
        return;
      }else if((this.threeNumber - this.twoNumber)<10){
        wx.showToast({
          title: '间隔大于10分钟',
          icon: 'none',
          duration: 2000
        });
        this.threeTime = ""
        return;
      }
      this.EndTimes[2] = this.threeNumber;
      console.log(this.EndTimes)
    },
    //设置人数
    // choosePeopleNum: function (e) {
    //   this.peopleNum = e.detail.value;
    // },
    // 设置单场赛制
    singleGameBtn: function () {
      //结束时间
      let endGameTime = this.endDate + ' ' + this.endTime;
      //开始发布时间
      let publicTime = this.startTime.slice(0, 16);
      let _this = this;
      if (!this.circletime) {
        console.log('单场赛')
        wx.request({
          url: `${this.$parent.globalData.commonUrl}/api/createArena?tk=${this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          data: {
            endTime: endGameTime,
            name: _this.theme,
            descript: '',
            maxNumberOfPlayer: Number(_this.peopleNum),
            maxRoundNumber: Number(_this.Round),
            firstPrize: _this.firstPrize.couponID,
            secondPrize: _this.secondPrize.couponID,
            thirdPrize: _this.thirdPrize.couponID,
            publishTime: publicTime,
            arenaType: Number(_this.typeGame)
            // isCycle: _this.circletime
          },
          header: {
            'content-type': 'application/json'
          },
          method: 'POST',
          success: function (res) {
            if (res.statusCode === 200) {
              console.log(res.data);
              switch (res.data.errCode) {
                case 0:
                  wx.showToast({
                    title: '发布成功',
                    icon: 'success',
                    duration: 2000
                  });
                  break;
                case 1012:
                  wx.showToast({
                    title: '该时段已有比赛进行中，请先下架',
                    icon: 'none',
                    duration: 2000
                  });
                  break
                case 1014:
                  wx.showToast({
                    title: '该时段已有比赛进行中，请先下架',
                    icon: 'none',
                    duration: 2000
                  });
                  break;
                case 1:
                  wx.showToast({
                    title: '信息未填写完整',
                    icon: 'none',
                    duration: 2000
                  });
                  break;
                default:
                  break;
              }
            }
          }
        });
      } else {
        console.log('循环赛')
        wx.request({
          url: `${this.$parent.globalData.commonUrl}/api/createArenaScheduleTask?tk=${this.$parent.globalData.tk}&storeId=${this.$parent.globalData.StoreId}`,
          data: {
            endTimes: _this.EndTimes,
            name: _this.theme,
            descript: '',
            maxNumberOfPlayer: Number(_this.peopleNum),
            maxRoundNumber: Number(_this.Round),
            firstPrize: _this.firstPrize.couponID,
            secondPrize: _this.secondPrize.couponID,
            thirdPrize: _this.thirdPrize.couponID,
            publishTime: publicTime,
            arenaType: Number(_this.typeGame)
            // isCycle: _this.circletime
          },
          header: {
            'content-type': 'application/json'
          },
          method: 'POST',
          success: function (res) {
            if (res.statusCode === 200) {
              console.log(res.data);
              switch (res.data.errCode) {
                case 0:
                  wx.showToast({
                    title: '制作成功',
                    icon: 'success',
                    duration: 2000
                  });
                  break;
                case 1014:
                  wx.showToast({
                    title: '该时段已有比赛进行中，请先下架',
                    icon: 'none',
                    duration: 2000
                  });
                  break
                default:
                  break;
              }
            }
          }
        });
      }
    },
    //开始日期
    // bindBeginDateChange: function (e) {
    //   console.log('picker发送选择改变，携带值为', e.detail.value);
    //   this.beginDate = e.detail.value;
    //   this.$apply();
    // },
    //结束日期
    bindEndDateChange: function (e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      var originEndDate = this.endDate
      this.endDate = e.detail.value;
      let selectTimes = new Date(this.endDate).getTime();
      let nowTimes = new Date().getTime();
      console.log('selectTimes', selectTimes)
      console.log('nowTimes', nowTimes)
      if (Number(selectTimes) < Number(nowTimes)) {
        wx.showToast({
          title: '选择日期不能小于当前日期',
          duration: 2000,
          icon: "none"
        })
        this.endDate = originEndDate;
      }
    },
    //开始时间
    // bindBeginTimeChange: function (e) {
    //   console.log('picker发送选择改变，携带值为', e.detail.value);
    //   this.beginTime = e.detail.value;
    // },
    //结束时间
    bindEndTimeChange: function (e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      this.endTime = e.detail.value;
      console.log(this.endDate + ' ' + this.endTime);
      let selectTimes = new Date(this.endDate + ' ' + this.endTime).getTime();
      let nowTimes = new Date().getTime();
      console.log('selectTimes', selectTimes)
      console.log('nowTimes', nowTimes)
      if (Number(selectTimes) < Number(nowTimes)) {
        wx.showToast({
          title: '选择时间不能小于当前时间',
          duration: 2000,
          icon: "none"
        })
        this.endTime = "20:00";
      }
    },
    // 星期选择
    bindWeekPickerChange: function (e) {
      this.weekindex = e.detail.value;
    },
    // 选填周期
    radioChange: function (e) {
      this.circletime = e.detail.value === 'isCircle';
      console.log('是否循环赛:', this.circletime);
      console.log('radio发生change事件，携带value值为：', e.detail.value);
    }
  };
  events = {};
  onShow() {
    console.log('游戏设置界面触发奖品信息----------',this.$parent.globalData);
    if (!Object.keys(this.$parent.globalData.singleGameFirstPrize).length) {
      return false;
    }
    this.firstPrize = this.$parent.globalData.singleGameFirstPrize;
    if (this.firstPrize.type == 0 || this.firstPrize.type == 2) {
      let tempObj = this.firstPrize;
      tempObj.content = this.firstPrize.type == 0?`现金券${this.firstPrize.value}元`:`折扣券${this.firstPrize.value}折`;
      this.firstPrize = tempObj;
    }
    this.secondPrize = this.$parent.globalData.singleGameSecondPrize;
    if (this.secondPrize.type == 0 || this.secondPrize.type == 2) {
      let tempObj = this.secondPrize;
      tempObj.content = this.secondPrize.type == 0?`现金券${this.secondPrize.value}元`:`折扣券${this.secondPrize.value}折`;
      this.secondPrize = tempObj;
    }
    this.thirdPrize = this.$parent.globalData.singleGameThirdPrize;
    if (this.thirdPrize.type == 0 ||this.thirdPrize.type == 2) {
      let tempObj = this.thirdPrize;
     tempObj.content = this.thirdPrize.type == 0?`现金券${this.thirdPrize.value}元`:`折扣券${this.thirdPrize.value}折`;
      this.thirdPrize = tempObj;
    }
    var gameBeginTime = new Date().getTime();
    this.startTime = util.timestampToTime(gameBeginTime);
  }
  onReady() {
    //设置比赛当前日期
    let nowTime = util.nowDate();
    this.beginDate = nowTime;
    this.endDate = nowTime;
    this.Publicdate = nowTime;
  }
  // Other properties
}
</script>

<style lang="less">
.game-container {
  background-color: #fff;
  // height: 100%;
}
.tab-wrapper {
  display: flex;
  justify-content: space-between;
  border-bottom: 1px solid #ccc;
}
.tab-wrapper .tabItem {
  padding: 20rpx;
  text-align: center;
  width: 50%;
  background-color: #fff;
}
.tab-wrapper .tabItem.line {
  border-right: 1px solid #f1f1f1;
}
.beginTime-wrapper,
.endTime-wrapper,
.prize-wrapper,
.juNum-wrapper {
  padding: 10rpx 20rpx;
  border-bottom: 1px solid #ccc;
  background-color: #fff;
  box-sizing: border-box;
}
.prizeItem {
  display: flex;
  justify-content: space-between;
  margin-bottom: 20rpx;
}
.prizeItem .name {
  padding-top: 6rpx;
  width: 150rpx;
}
.prizeItem .prizeName {
  /* margin-top: 8rpx; */
  width: 300rpx;
}
.swiperItemOne .title {
  font-size: 34rpx;
  font-weight: 800;
  color: #333;
}
.swiperItemOne .title,
.swiperItemOne .beginDate {
  margin-bottom: 20rpx;
  font-weight: 800;
  color: #333;
}
.active {
  color: red;
}
.btn {
  margin-top: 40rpx;
  width: 94%;
}
/* 循环赛制 */
.circulate-wrapper,
.Radio-wrapper {
  padding: 10rpx 20rpx;
  margin-bottom: 10rpx;
  border-bottom: 1px solid #ccc;
}
.Radio-wrapper .title {
  margin-bottom: 20rpx;
  font-size: 34rpx;
  font-weight: 800;
  color: #333;
}
.title {
  font-size: 30rpx;
  font-weight: 900;
  color: #333;
}
.circle-box {
  margin-top: 20rpx;
}
.radio {
  margin-right: 60rpx;
}
.picker {
  display: inline-block;
  background-color: #ccc;
  color: #fff;
  margin-top: 10rpx;
}
.time-box {
  padding: 0;
}
.timeBox {
  margin: 20rpx 0;
}
.timeItem {
  border: 1px solid #ccc;
  padding: 10rpx 10rpx;
  margin-right: 20rpx;
  width: 60rpx;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}
.active {
  color: #fff;
  background-color: #ccc;
}
</style>
<style lang="less" src="../../../mixins/less/btn.less"></style>