<template>
  <view class="container log">
    <view class='title'>
      <image src='../../images/log_bg.png' class='log_bg' />
      <view class='text'>k98管理后台</view>
    </view>
    <view class='login_wrapper'>
      <input type='number' class='account_input' @blur='bindAccound' placeholder="请输入账号" />
      <input type='password' class='password_input' @blur='bindPassword' placeholder="请输入密码" />
    </view>
    <view class='btn-container'>
      <button @tap='_login' class='btn'>登录</button>
      <!-- <button open-type="share" class='btn'>测试</button> -->
      <!-- <button open-type="getPhoneNumber" @getphonenumber="getPhoneNumber">获取手机号</button> -->
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  const util = require('../../utils/utils.js');
  export default class log extends wepy.page {
    config = {
      navigationBarTitleText: '商家后台登陆'
    };
    data = {
      account: '',
      password: '',
      shopList: [],
      staffList: []
    };
    methods = {
      getPhoneNumber(e) {
        console.log(e.detail.errMsg);
        console.log(e.detail.iv);
        console.log(e.detail.encryptedData);
      },
      bindAccound(e) {
        this.account = e.detail.value;
        console.log(this.account);
      },
      bindPassword(e) {
        this.password = e.detail.value;
        console.log(this.password);
      },
      _login() {
        let _this = this;
        console.log('账号：', this.account);
        console.log('密码：', this.password);
        wx.login({
          success: function(res) {
            if (res.code) {
              //发起网络请求
              console.log(res);
              wx.request({
                url: `${_this.$parent.globalData.commonUrl}/wechatAppLogin`,
                data: {
                  phone: _this.account,
                  password: _this.password
                },
                header: {
                  'content-type': 'application/json'
                },
                method: 'POST',
                success: async function(res) {
                  console.log('res-------------', res.data);
                  if (res.data.errCode === 0) {
                    let loginWechatAppletReply = res.data.loginWechatAppletReply;
                    _this.$parent.globalData.tk = loginWechatAppletReply.tk;
                    _this.$parent.globalData.userInfo = loginWechatAppletReply.staff;
                    wx.redirectTo({
                      url: '../log/shopList'
                    });
                  } else {
                    wx.showToast({
                      title: '账号或密码错误',
                      icon: 'none',
                      duration: 2000
                    });
                  }
                }
              });
            } else {
              console.log('登录失败！' + res.errMsg);
            }
          }
        });
      }
    };
    _loadStaffs() {
      let _this = this;
      let url = `${this.$parent.globalData.commonUrl}/api/loadAllStaff?tk=${this.$parent.globalData.tk}&phone=${this.$parent.globalData.userInfo.phone}`
      let test = util.interface_get(url).then(res => {
        return new Promise(resolve => {
          resolve(res.staff)
        })
      })
      test.then(res => {
        console.log("test------", res)
      })
      return this.staffList
    };
    _loadShopList() {
      let url = `${this.$parent.globalData.commonUrl}/api/loadShopList?tk=${this.$parent.globalData.tk}&phone=${this.$parent.globalData.userInfo.phone}`
      util.interface_get(url).then(res => {
        console.log("店铺列表信息-----", res)
        this.shopList = res
      })
      return this.shopList
    };
    events = {};
    onLoad() {}
    // Other properties
  }
</script>

<style lang="less">
  .log_bg {
    width: 100%;
    height: 304rpx;
  }
  .title {
    text-align: center;
    margin-bottom: 40rpx;
    position: relative;
  }
  .title .text {
    position: absolute;
    top: 120rpx;
    left: 276rpx;
    color: #fff;
    font-size: 34rpx;
  }
  .account_input,
  .password_input {
    margin: 0 auto;
    width: 700rpx;
    height: 120rpx;
    background-color: #fff;
    margin-bottom: 36rpx;
    font-size: 30rpx;
    border-radius: 15rpx;
    box-sizing: border-box;
    padding-left: 38rpx;
  }
  .btn-container {
    margin: 0 auto;
    margin-top: 90rpx;
    width: 702rpx;
    height: 102rpx;
    font-size: 38rpx;
    color: #fff;
    background: #ffba00;
  }
  .btn-container .btn {
    height: 100%;
    width: 100%;
    color: #fff;
    background: #ffba00;
  }
</style>